[General]
network = Net
sim-time-limit = 1h
cpu-time-limit = 300s
#debug-on-errors = true
#record-eventlog = true

#Policy should be: PSNP (priority scheduling non preemptive) or PSWPresume (PS with preemption resume) or PSWPrestart (PS with preemption restart)
#All the parameters provided can be changed as desidered.
#We offer 4 basic configurations: N_classes, 3 classes, 4 classes and 10 classes in addition to the general configuration.
#Other configurations can be created if necessary

[Config N_classes]
description = "N classes with same interarrival and service times"

#If this default configuration is runned, only number of classes and policy will be asked
#InterarrivalTime and ServiceTime will be for each class exponential with the parameters below

**.n = ask
**.policy = ask
**.gen[*].interArrivalTime = exponential(0.5s)
**.gen[*].serviceTime = exponential(0.4s)

[Config Three_Classes]
description = "Configuration with 3 classes"

**.n = 3
**.policy = ask
**.gen[0].interArrivalTime = exponential(0.3s)
**.gen[0].serviceTime = exponential(0.9s)
**.gen[1].interArrivalTime = exponential(0.4s)
**.gen[1].serviceTime = exponential(0.3s)
**.gen[2].interArrivalTime = exponential(0.5s)
**.gen[2].serviceTime = exponential(0.4s)


[Config Four_Classes]
description = "Configuration with 4 classes"

**.n = 4
**.policy = ask
**.gen[0].interArrivalTime = exponential(0.3s)
**.gen[0].serviceTime = exponential(0.9s)
**.gen[1].interArrivalTime = exponential(0.4s)
**.gen[1].serviceTime = exponential(0.3s)
**.gen[2].interArrivalTime = exponential(0.5s)
**.gen[2].serviceTime = exponential(0.4s)
**.gen[3].interArrivalTime = exponential(0.2s)
**.gen[3].serviceTime = exponential(0.1s)

[Config Ten_Classes]
description = "Configuration with 10 classes"

**.n = 10
**.policy = ask
**.gen[0].interArrivalTime = exponential(0.3s)
**.gen[0].serviceTime = exponential(0.9s)
**.gen[1].interArrivalTime = exponential(0.4s)
**.gen[1].serviceTime = exponential(0.3s)
**.gen[2].interArrivalTime = exponential(0.5s)
**.gen[2].serviceTime = exponential(0.4s)
**.gen[3].interArrivalTime = exponential(0.2s)
**.gen[3].serviceTime = exponential(0.1s)
**.gen[4].interArrivalTime = exponential(0.3s)
**.gen[4].serviceTime = exponential(0.9s)
**.gen[5].interArrivalTime = exponential(0.4s)
**.gen[5].serviceTime = exponential(0.3s)
**.gen[6].interArrivalTime = exponential(0.5s)
**.gen[6].serviceTime = exponential(0.4s)
**.gen[7].interArrivalTime = exponential(0.2s)
**.gen[7].serviceTime = exponential(0.1s)
**.gen[8].interArrivalTime = exponential(0.3s)
**.gen[8].serviceTime = exponential(0.9s)
**.gen[9].interArrivalTime = exponential(0.4s)
**.gen[9].serviceTime = exponential(0.3s)


